@layer reset, theme, base, components;

@import url("./style/reset.css") layer(reset);
@import url("./style/theme.css") layer(theme);
@import url("./style/base.css") layer(base);
@import url("./style/dialog.css") layer(components);

.task-input-area {
  width: min(500px, 100%);
  display: flex;
  justify-content: center;
  align-items: center;
  column-gap: 0.5rem;
  margin-bottom: 2rem;
}

input#task-input {
  flex-grow: 1;
  padding: 0.5rem;
  border-radius: 0.25rem;
  border: 1px solid rgba(0, 0, 0, 0.1);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
  background: var(--color-white);
}

.task-checkbox {
  width: fit-content;
  display: grid;
  /* grid-template-columns: auto; */
  /* padding: 8px; */
  /* font-size: 16px;
  font-weight: normal;
  line-height: 1.5;
  color: #404040; */

  & input.task-completed {
    cursor: pointer;
    appearance: none;
    position: relative;
    width: 22px;
    height: 22px;
    background-color: #ffffff;
    border: solid 1px #bdbdbd;
    border-radius: 2px;
    transition: background-color 0.15s ease, border-color 0.15s ease;

    &:hover {
      border-color: var(--color-gray-700);
      background-color: var(--color-gray-100);
    }

    &::before {
      content: "";
      position: absolute;
      display: block;
      width: 100%;
      height: 100%;
      inset: 0;
      background-color: #000;
      mask-image: url("/img/check.svg");
      mask-repeat: no-repeat;
      mask-size: contain;
      opacity: 0;
      transition: opacity 0.15s ease-out;
    }

    &:checked::before {
      opacity: 1;
      transition: opacity 0.15s ease-out;
    }
  }

  &:has(input.task-completed:checked) + span.task-text {
    text-decoration: line-through;
    transition: line-through 0.15s ease-out;
  }
}

.task-list {
  width: min(500px, 100%);
  margin-block-end: 2rem;
}

.task-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  column-gap: 0.5rem;
  background: #fff;
  margin-block-end: 1rem;
  padding-block: 8px;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  /* border-radius: 4px; */
  /* box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05); */
}

span.task-text {
  flex-grow: 1;
  padding: 0.5rem;
  border: 1px solid transparent;
}

input.task-text {
  flex-grow: 1;
  padding: 0.5rem;
  border-radius: 0.25rem;
  transition: border 0.1s ease-out, box-shadow 0.1s ease-out;
  border: 1px solid rgba(0, 0, 0, 0);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0);

  &:focus {
    outline: none;
    border: 1px solid rgba(0, 0, 0, 0.1);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }
}

.button-wrapper {
  display: flex;
  column-gap: 0.5rem;
}

[class$="-button"] {
  cursor: pointer;
  width: 24px;
  height: 24px;
  padding: 4px;
  border-radius: 4px;
  background-color: var(--color-gray-300);
  transition: background-color 0.15s ease;
}

.task-add-button {
  background-color: var(--color-blue-100);
  &:hover {
    background-color: var(--color-blue-200);
  }
}

.task-delete-button {
  background-color: var(--color-gray-300);
  &:hover {
    background-color: var(--color-red-300);
  }
}

.task-edit-button {
  background-color: var(--color-green-200);
  &:hover {
    background-color: var(--color-green-300);
  }
}
